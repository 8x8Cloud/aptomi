apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: {{ template "fullname" . }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/aptomi/configmap.yaml") . | sha256sum }}
      labels:
        app: {{ template "fullname" . }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
        - name: aptomi-config
          mountPath: /etc/aptomi
        - name: aptomi-db
          mountPath: /var/lib/aptomi
        readinessProbe:
          exec:
            command: [ "/bin/sh", "-ce", "wget -O - -T {{ .Values.probePeriodSeconds }} -q localhost:{{ .Values.port }}/version | grep gitversion" ]
          initialDelaySeconds: {{ .Values.probeInitialDelaySeconds }}
          periodSeconds: {{ .Values.probePeriodSeconds }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
      volumes:
        - name: aptomi-config
          configMap:
            name: {{ template "fullname" . }}
            items:
              - key: aptomi-config
                path: config.yml
              - key: aptomi-users
                path: users.yaml
        - name: aptomi-db
        {{- if eq .Values.persistence.type "PersistentVolumeClaim" }}
          persistentVolumeClaim:
            claimName: {{ template "fullname" . }}
        {{- else if eq .Values.persistence.type "emptyDir" }}
          emptyDir: {}
        {{- else if eq .Values.persistence.type "hostPath" }}
          hostPath:
            path: "{{ .Values.persistence.hostPath }}"
        {{- end }}
