# Definition of Spark service
- metadata:
    kind: service
    namespace: main
    name: spark

  owner: cn=Frank,ou=people,o=aptomiOrg

  components:

    - name: zookeeper
      contract: zookeeper

    - name: spark
      discovery:
        url: "spark-master-{{ .Discovery.instance }}-0.spark-master-{{ .Discovery.instance }}:7077"
      code:
        type: aptomi/code/kubernetes-helm
        params:
          chartName: spark-1.0.0
          cluster: "{{ .Labels.cluster }}"

          spark:
            master:
              replicas: 1
            worker:
              replicas: 1
              daemonMemory: "2g"
              executorMemory: "2g"

          zookeeper:
            externalAddress: "{{ .Discovery.zookeeper.zookeeper.url }}"
            path: "/{{ .Discovery.service.instanceId }}"
      dependencies:
        - zookeeper

# Contract for Spark
- metadata:
    kind: contract
    namespace: main
    name: spark

  contexts:
    # Production instance of the service (operated by ops/IT)
    - name: prod
      criteria:
        require-all:
          - org == 'it' && is_operator
      change-labels:
        set:
          cluster: cluster-us-east
      allocation:
        service: spark

    # Staging instance of the service (for developers)
    - name: stage
      criteria:
        require-all:
          - org == 'dev'
      change-labels:
        set:
          cluster: cluster-us-west
      allocation:
        service: spark